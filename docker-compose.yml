version: '3.8'

services:
    db:
        container_name: cs-db
        image: postgres:15.3-alpine3.18
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
        ports:
            - "${POSTGRES_PORT}:5432"

    app:
        container_name: cs-app
        build: .
        restart: always
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/code
        ports:
            - "8000:8000"
        environment:
            - POSTGRES_NAME=${POSTGRES_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - CELERY_BACKEND=${CELERY_BACKEND}
            - CELERY_BROKER=${CELERY_BROKER}
        depends_on:
            - db
            - redis

    binance_websocket:
        container_name: cs-binance-websocket
        build: .
        command: python binance_websocket.py
        volumes:
            - .:/code
        environment:
            - POSTGRES_NAME=${POSTGRES_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - CELERY_BACKEND=${CELERY_BACKEND}
            - CELERY_BROKER=${CELERY_BROKER}
        depends_on:
            - redis

    redis:
        container_name: cs-redis
        image: "redis/redis-stack-server:latest"
        volumes:
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        ports:
            - "6378:6379"

    celery:
        container_name: cs-celery
        build: .
        command: celery -A core worker -l INFO
        volumes:
            - .:/code
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=*
            - CELERY_BROKER=${CELERY_BROKER}
            - CELERY_BACKEND=${CELERY_BACKEND}
        depends_on:
            - app
            - redis

    celery-beat:
        container_name: cs-celery-beat
        build: .
        command: celery -A core beat -l INFO
        volumes:
            - .:/code
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=*
            - CELERY_BROKER=${CELERY_BROKER}
            - CELERY_BACKEND=${CELERY_BACKEND}
        depends_on:
            - app
            - redis

    grafana:
        container_name: cs-grafana
        image: grafana/grafana-enterprise
        ports:
            - "3000:3000"
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
            - GF_SERVER_ROOT_URL=https://grafana.crypto-scanner.xyz/
            - GF_INSTALL_PLUGINS=grafana-clock-panel
        restart: unless-stopped
        volumes:
            - grafana-storage:/var/lib/grafana

volumes:
    grafana-storage: {}
    pgdata:
